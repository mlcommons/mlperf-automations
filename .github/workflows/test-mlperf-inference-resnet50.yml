name: MLPerf inference ResNet50

on:
  pull_request:
    branches: [ "main", "dev" ]
    paths:
      - '.github/workflows/test-mlperf-inference-resnet50.yml'
      - '**'
      - '!**.md'
jobs:
  mlc-run-with-results-upload:
    runs-on: ${{ matrix.os }}
    env:
      MLC_INDEX: "on"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ "3.12" ]
        backend: [ "onnxruntime", "tf" ]
        implementation: [ "python", "cpp" ]
        exclude:
          - backend: tf
            implementation: cpp
          - os: macos-latest
            backend: tf
          - os: windows-latest
            implementation: cpp
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Configure git longpaths (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        git config --system core.longpaths true

    - name: Install mlcflow
      run: |
        pip install mlcflow
        pip install tabulate

    - name: Pull MLOps repo
      run: |
        mlc pull repo ${{ github.event.pull_request.head.repo.html_url }} --branch=${{ github.event.pull_request.head.ref }}

    - name: Test MLPerf Inference ResNet50 (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mlcr --tags=run-mlperf,inference,_submission,_short --submitter="MLCommons" --pull_changes=yes --pull_inference_changes=yes --hw_name=gh_${{ matrix.os }}_x86 --model=resnet50 --adr.loadgen.tags=_from-pip --pip_loadgen=yes --implementation=${{ matrix.implementation }} --backend=${{ matrix.backend }} --device=cpu --scenario=Offline --test_query_count=500 --target_qps=1 -v --quiet 
    - name: Test MLPerf Inference ResNet50 (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mlcr --tags=run-mlperf,inference,_submission,_short --submitter="MLCommons" --pull_changes=yes --pull_inference_changes=yes --hw_name=gh_${{ matrix.os }}_x86 --model=resnet50 --implementation=${{ matrix.implementation }} --backend=${{ matrix.backend }} --device=cpu --scenario=Offline --test_query_count=500 --target_qps=1 -v --quiet 
    - name: Retrieve secrets from Keeper
      id: ksecrets
      uses: Keeper-Security/ksm-action@master
      with:
        keeper-secret-config: ${{ secrets.KSM_CONFIG }}
        secrets: |-
          ubwkjh-Ii8UJDpG2EoU6GQ/field/Access Token > env:PAT  # Fetch PAT and store in environment variable
    - name: Push Results
      env:
        PAT: ${{ env.PAT }}
      if: github.repository_owner == 'mlcommons'
      run: |
        git config --global user.name mlcommons-bot
        git config --global user.email "mlcommons-bot@users.noreply.github.com"
        git clone -b auto-update https://github.com/mlcommons/mlperf_inference_test_submissions_v5.0 tmp
        cd tmp
        RE=$PAT
        echo $RE
        echo $PAT
        lop=$RE
        echo $lop
        echo ${{ env.PAT }}
        echo "hello" >> README.md
        git commit -a -m "Test commit"
        git push https://${PAT}@github.com/mlcommons/mlperf_inference_test_submissions_v5.0 HEAD:${{ github.ref_name }}

        # mlcr --tags=push,github,mlperf,inference,submission --env.MLC_GITHUB_PAT=pat --repo_url=https://github.com/mlcommons/mlperf_inference_test_submissions_v5.0 --repo_branch=auto-update --commit_message="Results from R50 GH action on ${{ matrix.os }}" --quiet
