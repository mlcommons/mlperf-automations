name: Test script on modified meta (with secret)

on:
  pull_request_target:
    branches: [ "main", "dev" ]
    paths:
      - 'script/**meta.yaml'

jobs:
  fetch-secret:
    runs-on: ubuntu-latest
    outputs:
      gdrive_secret: ${{ steps.op-load-secret.outputs.GDRIVE_SERVICE_ACCOUNT_KEY }}
    steps:
      - name: Load secret from 1Password
        id: op-load-secret
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          GDRIVE_SERVICE_ACCOUNT_KEY: op://7basd2jirojjckncf6qnq3azai/bzbaco3uxoqs2rcyu42rvuccga/credential

  get_modified_files:
    runs-on: ubuntu-latest
    outputs:
      processed_files: ${{ steps.modified-files.outputs.processed_files }}

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install pyyaml

    - name: Get changed files
      id: modified-files
      run: |
        git remote add upstream ${{ github.event.pull_request.base.repo.clone_url }}
        git fetch upstream
        changed_files=$(git diff upstream/${{ github.event.pull_request.base.ref }} --name-only | paste -sd, -)
        echo "$changed_files" | python3 .github/scripts/list_modified_scripts_with_secrets.py

  process_modified_files:
    needs: 
      - get_modified_files
      - fetch-secret
    runs-on: ubuntu-latest
    if: needs.get_modified_files.outputs.processed_files != '[]' && needs.get_modified_files.outputs.processed_files != ''
    strategy:
      fail-fast: false
      matrix:
        file_info: ${{ fromJSON(needs.get_modified_files.outputs.processed_files).file_info }}
    steps:
      - name: Set RCLONE Service account env var from secret
        shell: bash
        run: |
          echo "::add-mask::${{ needs.fetch-secret.outputs.gdrive_secret }}"
          echo "RCLONE_CONFIG_MLC_COGNATA_SERVICE_ACCOUNT_CREDENTIALS=${{ needs.fetch-secret.outputs.gdrive_secret }}" >> $GITHUB_ENV
          echo "RCLONE_CONFIG_MLC_NUSCENES_SERVICE_ACCOUNT_CREDENTIALS=${{ needs.fetch-secret.outputs.gdrive_secret }}" >> $GITHUB_ENV
        
      - name: Process meta.yaml file
        run: |
          echo "Processing ${{ matrix.file_info.file }} (run #${{ matrix.file_info.num_run }})"
          pip install mlcflow
          mlc pull repo ${{ github.event.pull_request.head.repo.html_url }} --branch=${{ github.event.pull_request.head.ref }}
          mlc test script ${{ matrix.file_info.uid }} --test_input_index=${{ matrix.file_info.num_run }} --docker_mlc_repo=${{ github.event.pull_request.head.repo.html_url }} --docker_mlc_repo_branch=${{ github.event.pull_request.head.ref }} --quiet
